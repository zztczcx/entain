name: CI

on:
  push:

env:
  GO_VERSION: '1.23.x'
  GRPC_GATEWAY_VERSION: 'v2.27.2'
  PROTOC_GEN_GO_VERSION: 'v1.36.9'
  PROTOC_GEN_GO_GRPC_VERSION: 'v1.5.1'

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      PATH: /usr/local/bin:/usr/bin:/bin:/usr/local/go/bin:/go/bin
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: go-cache-${{ hashFiles('**/go.sum') }}-${{ env.GRPC_GATEWAY_VERSION }}
      - name: Setup and lint
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@${{ env.GRPC_GATEWAY_VERSION }} &
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@${{ env.GRPC_GATEWAY_VERSION }} &
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@${{ env.PROTOC_GEN_GO_GRPC_VERSION }} &
          go install google.golang.org/protobuf/cmd/protoc-gen-go@${{ env.PROTOC_GEN_GO_VERSION }} &
          go install github.com/vektra/mockery/v2@v2.53.5 &
          wait
          for service in racing sports api; do
            (cd $service && go generate ./... && go vet ./... && go fmt -d . | tee fmt.out && test ! -s fmt.out)
          done

  build:
    runs-on: ubuntu-latest
    env:
      PATH: /usr/local/bin:/usr/bin:/bin:/usr/local/go/bin:/go/bin
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: go-cache-${{ hashFiles('**/go.sum') }}-${{ env.GRPC_GATEWAY_VERSION }}
      - name: Build and package
        run: |
          mkdir -p dist
          for service in racing sports api; do
            (cd $service && go build -buildvcs=false -o ../dist/$service .)
          done
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/**

  test:
    runs-on: ubuntu-latest
    env:
      PATH: /usr/local/bin:/usr/bin:/bin:/usr/local/go/bin:/go/bin
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: go-cache-${{ hashFiles('**/go.sum') }}-${{ env.GRPC_GATEWAY_VERSION }}
      - name: Test services
        run: |
          for service in racing sports; do
            (cd $service && go test ./...)
          done

  smoke:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Run smoke tests
        run: |
          chmod +x .github/scripts/smoke.sh
          .github/scripts/smoke.sh

